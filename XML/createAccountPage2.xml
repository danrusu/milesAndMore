<?xml version="1.0" encoding="UTF-8"?>
<suite name="CreateAccount_Page2_Test" user="dan.rusu">
 
 
################################################################################## 	
########## PAGE 2 INPUT VALIDATION ###############################################
##################################################################################
    <test name="CreateAccountPage2_InputValidation" 
  			appiumServerUrl="http://0.0.0.0:4723/wd/hub"
  			platformName="Android"
  			deviceName="Nexus_5X"
  			app="C:\automationWorkspace\milesAndMore\apk\Miles More_v1.4.1_apkpure.com.apk">
  	
  		<testcase name="LoginPageValidate"/>
  	
  		<testcase name="CreateAccount"/>
  		
  		<testcase name="CreateAccountPage1Validate"/>
  		
   		# valid setup				
  		<testcase name="CreateAccountPage1Setup" 
  			firstName="Dan" 
  			lastName="Rusu" />
  			
  			
  		<testcase name="CreateAccountPage1Next"/>
  			
		<testcase name="CreateAccountPage2Validate"/>

  		### Create Account Page 2 ###
  		
  		## Verify static text
  		<testcase name="CreateAccountPage2Setup"
  			birthDateText="Birth date"
			streetAddressText="Street + number"
			zipCodeText="Zip code"
			cityText="City"
			countryText="Country"
			nextButtonText="Next"
			stopOnFailure="false"
			
			note="Verify page static text."/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# All empty 
  		###
	   	<testcase name="CreateAccountPage2Setup"/> 
  			
  		<testcase name="CreateAccountPage2Next" 
  			note="All imputs empty."/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="5"
  			stopAtFailure="false"/> 
  			
  			
  			
  		### Create Account Page 2 ###
  		# Set valid values for: Birth Date, Zipcode, Country (only empty is invalid) 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		birthDate="04/April/1983"
	   		zipCode="1111"
	   		country="Aruba"
	   		/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  			
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# streetAddress: letters and no number 
  		# city: letters + number
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="aaa"
	   		city="aaa12"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  			
  			
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# 3 streetAddress: letters + symbol + number 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="aaa!30"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/> 
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
 		# streetAddress:  symbol
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="!"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="2"
  			stopAtFailure="false"/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test valid streetAddress input: 
  		# streetAddress: name + [+space] nr 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		streetAddress="venus 16"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  		
  		
  		
  		 ### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: starts with hyphen
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="-Rome"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: ends with hyphen
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome-"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>	
  	
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + space + hyphen + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome -One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>	
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + hyphen + space + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome- One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/> 
  		
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + 2 hyphens + word 
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome--One"/>
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  		
  		
  		
  		### Create Account Page 2 ###
  		# Test invalid input: 
  		# city: Word + 2 spaces + word
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome  One"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="1"
  			stopAtFailure="false"/>
  			
  			
  			
  		### Create Account Page 2 ###
  		# Test valid input: 
  		# city: letters + hyphen + space + letters + hyphen + letters
  		###
	   	<testcase name="CreateAccountPage2Setup"
	   		city="Rome-One Rome-Two"/> 
  			
  		<testcase name="CreateAccountPage2Next"/> 
  		
  		<testcase name="VerifyCreateAcountPage2Errors" 
  			expectedErrorsCounter="0"
  			stopAtFailure="false"/> 
			
 	  </test>
  	


</suite>